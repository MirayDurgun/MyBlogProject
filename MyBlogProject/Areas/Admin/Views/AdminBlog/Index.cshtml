@using EntityLayer.Concrete
@model List<Blog>

@{
    ViewData["Title"] = "Index";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}


<style>
    .edit-icon {
        float: right;
        margin-left: 10px;
        padding-left: 5px;
        color: #91bbf3;
    }

        .edit-icon:hover {
            color: #76b7ff;
        }

    .close-icon {
        float: right;
        margin-left: 10px;
        color: #ec5353;
    }

        .close-icon:hover {
            color: #FF3333;
        }
</style>

<div id="wrapper">
    <div class="content-page">
        <div class="content">

            <div class="row">
                <div class="col-sm-4">
                    <a href="/Admin/AdminBlog/BlogAdd/" class="btn btn-purple rounded-pill w-md waves-effect waves-light mb-3"><i class="mdi mdi-plus"></i> Yeni Blog Oluştur</a>
                </div>
            </div>


            <div class="col-xl-12">
                <div class="card">
                    <ul class="nav nav-pills nav-justified">
                        <li class="nav-item">
                            <a href="/Admin/AdminBlog/Index" class="nav-link @(ViewBag.Category == null ? "active" : "")">
                                Tümü
                            </a>
                        </li>
                        @foreach (var category in Model.Select(m => m.Category.CategoryName).Distinct())
                        {
                            <li class="nav-item">
                                <a href="/Admin/AdminBlog/Index?category=@category" class="nav-link @(ViewBag.Category == category ? "active" : "")">
                                    @category
                                </a>
                            </li>
                        }
                    </ul>
                </div>
            </div>




            <div class="row">

                @if (Model != null)
                {
                    @foreach (var item in Model)
                    {
                        <div class="col-xl-4">
                            <div class="card">
                                <div class="card-body project-box">

                                    <a href="/Admin/AdminBlog/AdminBlogDelete/@item.BlogID" class="close-icon"><i class=" fas fa-window-close"></i></a>
                                    <a href="/Admin/AdminBlog/AdminBlogUpdate/@item.BlogID" class="edit-icon"><i class="fas fa-pencil-alt"></i></a>

                                    <div class="form-check form-switch float-end">
                                        <input class="form-check-input" type="checkbox" role="switch" id="blogStatus_@item.BlogID" onchange="toggleBlogStatus('@item.BlogID')" @((item.BlogStatus ? "checked" : ""))>
                                    </div>

                                    <h4 class="mt-0"><a href="/Admin/AdminBlog/BlogDetail/@item.BlogID" class="text-dark">@item.BlogTitle.ToUpper()</a></h4>
                                    @if (item.BlogStatus == true)
                                    {
                                        <div class="badge bg-success float-end">Yayında</div>
                                    }
                                    else
                                    {
                                        <div class="badge bg-danger float-end">Yayında Değil</div>
                                    }
                                    <p class="text-success text-uppercase font-13">@item.Category.CategoryName</p>
                                    @if (item.BlogContent.Length >= 350)
                                    {
                                        <p class="text-muted font-13">
                                            @item.BlogContent.Substring(0, item.BlogContent.Substring(0, 350).LastIndexOf(" "))....
                                            <a href="/Admin/AdminBlog/BlogDetail/@item.BlogID" class="text-primary">Devamını Oku</a>
                                        </p>
                                    }
                                    else
                                    {
                                        <p class="text-muted font-13">
                                            @item.BlogContent
                                            <a href="/Admin/AdminBlog/BlogDetail/@item.BlogID" class="text-primary">Devamını Oku</a>
                                        </p>
                                    }


                                    <ul class="list-inline">
                                        <li class="list-inline-item">
                                            <h4 class="mb-0">@ViewBag.CommentCount</h4>
                                            <p class="text-muted">Yorum sayısı</p>
                                        </li>
                                    </ul>
                                </div>
                            </div>

                        </div>
                    }
                }
            </div>

        </div>
    </div>
</div>






<script src="https://code.jquery.com/jquery-3.6.0.min.js"></script>

<script>
    function toggleBlogStatus(blogId) {
        // Anahtarın (switchin) işaretli olup olmadığını kontrol eder
        var isChecked = $('#blogStatus_' + blogId).prop('checked');
        $.ajax({
            url: '/Admin/AdminBlog/AdminBlogActive/' + blogId,
            //Controllera gider
            type: 'POST',
            data: { id: blogId, status: isChecked },
            // isChecked true ise, status true olur; eğer isChecked false ise, status false olur.
            // Sunucuya gönderilecek veri belirtilir (blogun ID'si ve durumu).
            success: function (response) {
                // AJAX isteği başarılı olduğunda
                if (isChecked) {
                    alert("Blog yayında"); // Anahtar (switch) işaretliyse
                } else {
                    alert("Blog yayında değil"); // Anahtar (switch) işaretli değilse
                }
                location.reload(); // Sayfayı yenile
            },
            error: function (xhr, status, error) {
                // AJAX isteği sırasında bir hata oluştuğunda
                alert("Hata oluştu: " + error); // Hata mesajını kullanıcıya göster
            }
        });
    }

</script>



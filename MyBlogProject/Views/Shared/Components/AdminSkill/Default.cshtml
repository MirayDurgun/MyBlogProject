@model List<Skill>


<style>
    .card {
        position: relative;
    }

    .skill-close,
    .skill-edit {
        position: absolute;
        top: 5px;
    }

    .skill-close {
        right: 10px;
    }

    .skill-edit {
        border: none;
        right: 40px;
        background: none;
        color: #a0a0a0;
    }

</style>



<!-- Bir modal (pencere) oluşturuluyor. -->
<div class="modal fade" id="addSkillModal" tabindex="-1" aria-labelledby="addSkillModalLabel" aria-hidden="true">
    <div class="modal-dialog">
        <div class="modal-content">
            <div class="modal-header">
                <!-- Modal başlığı -->
                <h5 class="modal-title" id="addSkillModalLabel">Skill Ekle</h5>
                <!-- Kapatma butonu -->
                <button type="button" class="btn-close" data-bs-dismiss="modal" aria-label="Close"></button>
            </div>
            <!-- Form alanları -->
            <form method="post" action="/Admin/AdminSkill/SkillAdd" id="addSkillForm">
                <div class="modal-body">
                    <div class="mb-3">

                        <!-- Skill adı giriş alanı -->
                        <label for="skillName" class="form-label">Yetkinlik Adı</label>
                        <input type="text" class="form-control" id="skillName" name="SkillName" required>
                        <label for="skillScore" class="form-label">Yetkinlik Yüzdesi</label>
                        <input type="text" class="form-control" id="skillScore" name="SkillScore" required>
                    </div>
                </div>
                <!-- Modal alt kısmı -->
                <div class="modal-footer">
                    <!-- Kapatma butonu -->
                    <button type="button" class="btn btn-secondary" data-bs-dismiss="modal">Kapat</button>
                    <!-- Ekleme butonu -->
                    <button type="submit" class="btn btn-primary">Ekle</button>
                </div>
            </form>
        </div>
    </div>
</div>






<div class="tab-pane" id="skill">
    <div class="col-12">
        <div class="card">
            <div class="row">
                <!-- Buton modalı tetikleyen buton -->
                <!-- "Yetkinlik Ekle" adında bir buton oluşturuluyor. -->
                <a href="#" class="btn btn-warning mb-4" data-bs-toggle="modal" data-bs-target="#addSkillModal"><i class=" fas fa-code"></i> Yetkinlik Ekle</a>
                @* data-bs-toggle="modal" özelliğine sahip bir düğme veya bağlantıya tıklandığında, bu, ilişkilendirilmiş modalı (pencereyi) açar veya kapatır. *@


                @foreach (var item in Model)
                {
                    <div class="col-md-3">
                        <div class="card border border-warning">
                            <div class="card-header text-center text-warning">
                                <h5 class="card-title mt-2">@item.SkillName</h5>
                                <a href="/Admin/AdminSkill/SkillUpdate/@item.SkillId" class="skill-edit fas fa-pencil-alt">
                                </a>

                                <button type="button" class="skill-close btn-close" aria-label="Sil" onclick="confirmDelete('@item.SkillId')"></button>

                            </div>
                            <div class="card-body">
                                <div class="progress mb-2">
                                    <div class="progress-bar bg-warning" role="progressbar" style="width: @item.SkillScore%;" aria-valuemin="0" aria-valuemax="100">@item.SkillScore%</div>
                                </div>
                            </div>
                        </div>
                    </div>
                }
            </div>
        </div>
    </div>
</div>



<script src="https://cdn.jsdelivr.net/npm/sweetalert2@11"></script>
<script>
    // Bu fonksiyon, beceriyi silme işlemini başlatmak için kullanılır
    function confirmDelete(skillId) {
        // SweetAlert2 kütüphanesini kullanarak bir onay iletişim kutusu görüntülenir
        Swal.fire({
            // İletişim kutusunun başlığı
            title: 'Silmek istediğine emin misin?',
            // İletişim kutusunun ikonu (uyarı simgesi)
            icon: 'warning',
            // İptal butonunun metni
            cancelButtonText: "Vazgeç",
            // İptal butonunu gösterme
            showCancelButton: true,
            // Onay butonunun rengi
            confirmButtonColor: '#f9c851',
            // İptal butonunun rengi
            cancelButtonColor: '#d33',
            // Onay butonunun metni
            confirmButtonText: 'Evet'
        }).then((result) => { // Kullanıcı bir eylem gerçekleştirdiğinde işlem devam eder
            if (result.isConfirmed) { // Kullanıcı onayladıysa
                // AJAX isteği yapılır
                $.ajax({
                    // Silinecek becerinin URL'si
                    url: '/Admin/AdminSkill/SkillDelete/' + skillId,
                    // Başarılı bir şekilde tamamlandığında
                    success: function (response) {
                    // Silinen becerinin HTML öğesi kaldırılır
                        $('#skill_' + skillId).remove();
                        location.reload();
                    },
                    // Hata oluştuğunda
                    error: function (xhr, status, error) {
                        // Hata ile ilgili bir iletişim kutusu gösterilir
                        Swal.fire(
                            'Hata!',
                            'Yetkinlik silinemedi.',
                            'error'
                        );
                    }
                });
            }
        });
    }


    // *****************************************************
    // EKLE
    @*JavaScript kodu: Form verilerini AJAX isteğiyle gönderme *@
        document.getElementById("addSkillForm").addEventListener("submit", function (event) {
    @* Sayfanın yeniden yüklenmesini engelle *@
                event.preventDefault();
    @* Formu al *@
           var form = event.target;
    @* Form verilerini FormData nesnesine dönüştür *@
          var formData = new FormData(form);
    @* Yeni bir XMLHttpRequest nesnesi oluştur *@
         var xhr = new XMLHttpRequest();
    @* İstek türünü belirle ve hedef URL'yi ayarla *@
          xhr.open("POST", form.action);
    @* İstek tamamlandığında yapılacak işlem *@
         xhr.onload = function () {
    @* İstek başarılıysa *@
         if (xhr.status === 200) {
    @* Sayfayı yenile *@
          location.reload();
                    }
                };
    @* Form verilerini istekle birlikte gönder *@
                xhr.send(formData);
        });
</script>
